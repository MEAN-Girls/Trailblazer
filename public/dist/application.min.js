"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ngMessages","ui.router","ui.bootstrap","ui.utils","leaflet-directive","angularAwesomeSlider"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$httpProvider",function($locationProvider,$httpProvider){$locationProvider.html5Mode(!0).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor")}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["$rootScope","$state","Authentication",function($rootScope,$state,Authentication){function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){var allowed=!1;toState.data.roles.forEach(function(role){return void 0!==Authentication.user.roles&&-1!==Authentication.user.roles.indexOf(role)?(allowed=!0,!0):void 0}),allowed||(event.preventDefault(),void 0!==Authentication.user&&"object"==typeof Authentication.user?$state.go("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){storePreviousState(fromState,fromParams)})}]),angular.element(document).ready(function(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("boundaries"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("core.admin",["core"]),ApplicationConfiguration.registerModule("core.admin.routes",["ui.router"]),ApplicationConfiguration.registerModule("trails"),ApplicationConfiguration.registerModule("users",["core"]),ApplicationConfiguration.registerModule("users.admin",["core.admin"]),ApplicationConfiguration.registerModule("users.admin.routes",["core.admin.routes"]),angular.module("boundaries").config(["$stateProvider",function($stateProvider){$stateProvider.state("boundaries",{"abstract":!0,url:"/boundaries",template:"<ui-view/>"}).state("boundaries.list",{url:"",templateUrl:"modules/boundaries/client/views/list-boundaries.client.view.html"}).state("boundaries.create",{url:"/create",templateUrl:"modules/boundaries/client/views/create-boundary.client.view.html",data:{roles:["user","admin"]}}).state("boundaries.view",{url:"/:boundaryId",templateUrl:"modules/boundaries/client/views/view-boundary.client.view.html",params:{boundaryFeature:null,center:null}}).state("boundaries.edit",{url:"/edit/:boundaryId",templateUrl:"modules/boundaries/client/views/edit-boundary.client.view.html",params:{boundaryFeature:null},data:{roles:["user","admin"]}})}]),angular.module("boundaries").controller("BoundariesController",["$scope","$stateParams","$rootScope","$location","Authentication","Boundaries","$state","leafletData","$http","Trails","$compile",function($scope,$stateParams,$rootScope,$location,Authentication,Boundaries,$state,leafletData,$http,Trails,$compile){if($scope.authentication=Authentication,console.log($stateParams.boundaryId),$scope.loading=!0,$scope.success=!1,$scope.statusMessage="!","boundaries.view"===$state.current.name){var boundaryFeature=$stateParams.boundaryFeature,center=($stateParams.boundaryId,$stateParams.center);null===$stateParams.boundaryFeature&&null!==$stateParams.boundaryId&&$state.go("home"),$scope.b_maname=boundaryFeature.properties.MANAME,$scope.b_mgrinst=boundaryFeature.properties.MGRINST,$scope.b_owner=boundaryFeature.properties.OWNER,$scope.b_ma_website=boundaryFeature.properties.MA_WEBSITE,$scope.b_manager=boundaryFeature.properties.MANAGER,$scope.b_ownertypes=boundaryFeature.properties.OWNERTYPES,$scope.b_area=boundaryFeature.properties.AREA,$scope.b_totacres=boundaryFeature.properties.TOTACRES,"ZZ"!==boundaryFeature.properties.DESC2?$scope.b_desc=boundaryFeature.properties.DESC1+boundaryFeature.properties.DESC2:"ZZ"!==boundaryFeature.properties.DESC1?$scope.b_desc=boundaryFeature.properties.DESC1:$scope.b_desc="No description available. ";var mapboxTile=L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpandmbXliNDBjZWd2M2x6bDk3c2ZtOTkifQ._QA7i5Mpkd_m30IGElHziw",{maxZoom:18,attribution:'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',id:"meangurlz.cd22205e",accessToken:"pk.eyJ1IjoibWVhbmd1cmx6IiwiYSI6ImNpa2g1cnF4YjAxNGx2dGttcGFmcm5nc3MifQ.ftvskKymYXv1VfqJPU9tnQ"});$scope.map=null,leafletData.getMap("boundary").then(function(map){mapboxTile.addTo(map),$scope.map=map;var firstMarker=$stateParams.boundaryFeature.geometry.coordinates[0],secondMarker=$stateParams.boundaryFeature.geometry.coordinates[$stateParams.boundaryFeature.geometry.coordinates.length-1];new L.featureGroup([firstMarker,secondMarker])});var setZoom=function(){return $stateParams.boundaryFeature.properties.TOTACRES>=1e4?12:$stateParams.boundaryFeature.properties.TOTACRES>=5e3?13:$stateParams.boundaryFeature.properties.TOTACRES>=2500?14:15};angular.extend($scope,{alachua:{lat:center.lat,lng:center.lng,zoom:setZoom()},controls:{fullscreen:{position:"topleft"}},geojson:{data:boundaryFeature,style:{color:"#9BC152",weight:2}},tiles:mapboxTile}),$scope.showChildren=function(item){item.active=!item.active},$scope.parkingIcon=L.icon({iconUrl:"/modules/core/client/img/icons/parking.png",iconSize:[38,95],iconAnchor:[22,94],popupAnchor:[-3,-76]}),$scope.boundary_items=[{name:"Managing Information",subItems:[{desc:"Managing Institution:"},{name:$scope.b_mgrinst},{desc:"Manager:"},{name:$scope.b_manager},{desc:"Manager Website:"},{name:$scope.b_ma_website}]},{name:"Owner Information",subItems:[{desc:"Owner:"},{name:$scope.b_owner},{desc:"Owner Type:"},{name:$scope.b_ownertypes}]},{name:"Property Sizing",subItems:[{desc:"Area:"},{name:$scope.b_area},{desc:"Total Acres:"},{name:$scope.b_totacres}]},{name:"About",subItems:[{desc:"Description:"},{name:$scope.b_desc}]}],Trails.query().$promise.then(function(res){$scope.trails=res,L.geoJson($scope.trails,{style:function(feature){return"parking"===feature.properties.Name?(console.log(feature),{icon:$scope.parkingIcon}):"null"!==feature.properties.color?{color:feature.properties.color,weight:2,dashArray:"3"}:{color:"red",weight:2}},onEachFeature:$scope.onEachFeature}).addTo($scope.map)}),$scope.onEachFeature=function(feature,layer){layer.on("click",function(e){if("parking"===feature.properties.Name){console.log(e.latlng.lat),$scope.parkingLat=e.latlng.lat,$scope.parkingLng=e.latlng.lng;L.popup({minWidth:200,maxHeight:300}).setLatLng(e.latlng).setContent($compile('<p><a style="cursor: pointer;" ng-click="navFunction(parkingLat, parkingLng)">Take me there!</a><br></p>')($scope)[0]).openOn($scope.map)}})},$scope.navFunction=function(lat,long){-1!==navigator.platform.indexOf("iPhone")||-1!==navigator.platform.indexOf("iPod")||-1!==navigator.platform.indexOf("iPad")?window.open("maps://maps.google.com/maps/dir/"+$rootScope.currLocation.lat+","+$rootScope.currLocation.lng+"/"+lat+","+long):window.open("http://maps.google.com/maps/dir/"+$rootScope.currLocation.lat+","+$rootScope.currLocation.lng+"/"+lat+","+long)}}else $scope.create=function(content){$scope.error=null;var boundary=new Boundaries(JSON.parse(content));boundary.$save(function(response){$scope.success=!0,$scope.statusMessage="Added"},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(){confirm("Are you sure you want to delete this user?")&&Boundaries["delete"]({boundaryId:$stateParams.boundaryId}).$promise.then(function(res){$scope.success=!0,$scope.statusMessage="Deleted"},function(error){$scope.error="Unable to remove boundary\n"+error})},$scope.update=function(isValid){if($scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","boundaryForm"),!1;var boundary=$scope.boundary;boundary.$update(function(){$scope.success=!0,$scope.statusMessage="Updated"},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){Boundaries.query().$promise.then(function(res){$scope.boundaries=res,$scope.loading=!1})},$scope.findOne=function(){angular.extend($scope,{edit:{lat:29.671316,lng:-82.327766,zoom:10}}),Boundaries.get({boundaryId:$stateParams.boundaryId}).$promise.then(function(res){$scope.boundary=res,console.log($scope.boundary);var previewData=$scope.boundary,poly=L.geoJson($scope.boundary),center=poly.getBounds().getCenter();angular.extend($scope,{edit:{lat:center.lat,lng:center.lng,zoom:14},geojson:{data:previewData,style:{color:"red"}}}),$scope.loading=!1})},$scope.showContent=function($fileContent){$scope.content=$fileContent;var previewData=JSON.parse($scope.content);angular.extend($scope,{center:{lat:29.671316,lng:-82.327766,zoom:10},geojson:{data:previewData,style:{color:"red"}}})}}]),angular.module("boundaries").directive("offCanvasMenu",["$stateParams",function($stateParams){$stateParams.boundaryFeature;return{restrict:"A",replace:!1,link:function(scope,element){scope.isMenuOpen=!1,scope.toggleMenu=function(){scope.isMenuOpen=!scope.isMenuOpen}}}}]),angular.module("boundaries").directive("onReadFile",["$parse",function($parse){return{restrict:"A",scope:!1,link:function(scope,element,attrs){var fn=$parse(attrs.onReadFile);element.on("change",function(onChangeEvent){var reader=new FileReader;reader.onload=function(onLoadEvent){scope.$apply(function(){fn(scope,{$fileContent:onLoadEvent.target.result})})},reader.readAsText((onChangeEvent.srcElement||onChangeEvent.target).files[0])})}}}]),angular.module("boundaries").factory("Boundaries",["$resource",function($resource){return $resource("api/boundaries/:boundaryId",{boundaryId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/client/views/home.client.view.html"}).state("not-found",{url:"/not-found",templateUrl:"modules/core/client/views/404.client.view.html",data:{ignoreState:!0}}).state("bad-request",{url:"/bad-request",templateUrl:"modules/core/client/views/400.client.view.html",data:{ignoreState:!0}}).state("forbidden",{url:"/forbidden",templateUrl:"modules/core/client/views/403.client.view.html",data:{ignoreState:!0}}).state("login",{url:"/login",templateUrl:"modules/users/client/views/authentication/signin.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus",function($scope,$state,Authentication,Menus){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","$filter","$rootScope","Authentication","$http","$stateParams","$state","leafletData","$compile","Boundaries","Trails",function($scope,$filter,$rootScope,Authentication,$http,$stateParams,$state,leafletData,$compile,Boundaries,Trails){function openPopup(feature,latlng){$scope.feature=feature,$scope.boundaryId=$scope.feature._id,$scope.name=feature.properties.MANAME,$scope.area=feature.properties.TOTACRES+" acres",$scope.type=feature.properties.MATYPE,$scope.managing_a=feature.properties.MANAGING_A,"ZZ"!==feature.properties.DESC2?$scope.description=feature.properties.DESC1+feature.properties.DESC2:"ZZ"!==feature.properties.DESC1?$scope.description=feature.properties.DESC1:$scope.description="No description available. ";var poly=L.geoJson(feature);$scope.center=poly.getBounds().getCenter();L.popup({minWidth:200,maxHeight:300}).setLatLng(latlng).setContent($compile('<p><b>{{name}}</b><br><br>{{area}}</br><br>{{managing_a}}</br><br>{{description}}</br><br><a style="cursor: pointer;" ng-click="navFunction(center.lat, center.lng)">Take me there!</a><br><br><button class="btn btn-success" type="button" ng-click="expand(feature)">See More...</button></p>')($scope)[0]).openOn($scope.map)}$scope.authentication=Authentication;var mapboxTile=L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpandmbXliNDBjZWd2M2x6bDk3c2ZtOTkifQ._QA7i5Mpkd_m30IGElHziw",{id:"meangurlz.cd22205e",accessToken:"pk.eyJ1IjoibWVhbmd1cmx6IiwiYSI6ImNpa2g1cnF4YjAxNGx2dGttcGFmcm5nc3MifQ.ftvskKymYXv1VfqJPU9tnQ"}),mapboxSatellite=L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpandmbXliNDBjZWd2M2x6bDk3c2ZtOTkifQ._QA7i5Mpkd_m30IGElHziw",{id:"mapbox.satellite",accessToken:"pk.eyJ1IjoibWVhbmd1cmx6IiwiYSI6ImNpa2g1cnF4YjAxNGx2dGttcGFmcm5nc3MifQ.ftvskKymYXv1VfqJPU9tnQ"}),mapboxDark=L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpandmbXliNDBjZWd2M2x6bDk3c2ZtOTkifQ._QA7i5Mpkd_m30IGElHziw",{id:"mapbox.dark",accessToken:"pk.eyJ1IjoibWVhbmd1cmx6IiwiYSI6ImNpa2g1cnF4YjAxNGx2dGttcGFmcm5nc3MifQ.ftvskKymYXv1VfqJPU9tnQ"}),tilesDict={street:mapboxSatellite,light:mapboxTile,dark:mapboxDark},setFilter=function(feature){return"Private Individual(s)"===feature.properties.OWNER?!1:!0};$scope.clearFilter=function(){console.log("Cleared filters"),$scope.customStyle.style={"background-color":"#b8bbbc"},$scope.searchingBar={},$scope.acres_search={},$scope.checkBoxAcres=!1,$scope.rad_search=$scope.radius_filter(void 0),$scope.sliderValue="15"},$scope.customStyle={},$scope.turnClear=function(){$scope.customStyle.style={"background-color":"#a32f2f"}},Boundaries.query().$promise.then(function(res){$rootScope.boundaries=res,$scope.geoLayer=L.geoJson($rootScope.boundaries,{style:{color:"#9BC152",weight:2},onEachFeature:$scope.onEachFeature,filter:function(feature,layer){return setFilter(feature)}}).addTo($scope.map)});var regions={alachua:{northEast:{lat:30.3495,lng:-81.510871},southWest:{lat:29.181269,lng:-82.928107}}};$scope.focusBoundary=function(boundary){var poly=L.geoJson(boundary),center=poly.getBounds().getCenter();openPopup(boundary,center),$scope.toggleMenu()},$scope.filterPrivate="!Private Individual(s)",$scope.showAll=function(){$scope.map.removeLayer($scope.geoLayer),console.log($scope.checked),$scope.checked===!1?($scope.geoLayer=L.geoJson($rootScope.boundaries,{style:{color:"#9BC152",weight:2},onEachFeature:$scope.onEachFeature,filter:function(feature,layer){return setFilter(feature)}}).addTo($scope.map),$scope.filterPrivate="!Private Individual(s)"):($scope.geoLayer=L.geoJson($rootScope.boundaries,{style:{color:"#9BC152",weight:2},onEachFeature:$scope.onEachFeature}).addTo($scope.map),$scope.filterPrivate="")},angular.extend($scope,{maxbounds:regions.alachua,alachua:{lat:29.671316,lng:-82.327766,zoom:13},tiles:mapboxTile,controls:{fullscreen:{position:"topleft"}}});var innerCircle,outerCircle,radiusCircle;$scope.map=null,$scope.current_location=null,leafletData.getMap("county").then(function(map){$scope.map=map,$scope.map.options.minZoom=10,$scope.map.locate({setView:!0,maxZoom:13}),$scope.map.on("locationfound",function(e){$rootScope.currLocation=e.latlng,$scope.current_location=e.latlng,radiusCircle&&$scope.map.removeLayer(radiusCircle),radiusCircle=L.circle(e.latlng,e.accuracy,{stroke:!1,fillColor:"#3473e2",opacity:.2,fillOpacity:.2}).addTo($scope.map),outerCircle&&$scope.map.removeLayer(outerCircle),outerCircle=L.circleMarker(e.latlng,{fillColor:"#3473e2",opacity:.5,weight:1,fillOpacity:.5}).setRadius(10).addTo($scope.map),innerCircle&&$scope.map.removeLayer(innerCircle),innerCircle=L.circleMarker(e.latlng,{fillColor:"#3473e2",color:"white",opacity:1,weight:2,fillOpacity:1}).setRadius(7).addTo($scope.map)}),mapboxTile.addTo(map),$scope.map.on("popupopen",function(e){var px=$scope.map.project(e.popup._latlng);px.y-=e.popup._container.clientHeight/2,$scope.map.panTo($scope.map.unproject(px),{animate:!0,duration:1})})}),$scope.sliderValue="35",$scope.sliderOptions={from:1,to:15,step:1,dimension:" mi",scale:[1,3,5,7,9,11,13,{val:15,label:"15+"}],limits:!1,modelLabels:{15:"15+"},css:{background:{"background-color":"silver"},before:{"background-color":"#407186"},"default":{"background-color":"white"},after:{"background-color":"#407186"},pointer:{"background-color":"white"}},callback:function(value,elt){console.log(value),$scope.turnClear(),"15"===value?$scope.rad_search=$scope.radius_filter(void 0):$scope.rad_search=$scope.radius_filter(value)}},$scope.radius_filter={};var circle;$scope.radius_filter=function(chosen){if(void 0===chosen)circle&&$scope.map.removeLayer(circle);else{if(""!==chosen)return circle&&$scope.map.removeLayer(circle),circle=L.circle($scope.current_location,1609.34*chosen,{clickable:!1,stroke:!0,fillColor:"#3473e2",opacity:.08,fillOpacity:.03}).addTo($scope.map),$scope.map.panTo($scope.current_location,{animate:!0,duration:.5}),function(item){if(circle){var poly=L.geoJson(item);return circle.getBounds().contains(poly.getBounds().getCenter())}return item};circle&&$scope.map.removeLayer(circle)}},$scope.clearRadius=function(){document.getElementById("rad_search_box").value=""},$scope.changeTiles=function(tiles){console.log(tiles),$scope.map.removeLayer(mapboxTile),$scope.map.removeLayer(mapboxSatellite),$scope.map.removeLayer(mapboxDark),tilesDict[tiles].addTo($scope.map)},$scope.acreText="Acres:",$scope.acreSize={},$scope.acreSize=function(chosen){var minSize,maxSize,acreString;return void 0===chosen?(minSize=0,maxSize=10001):(minSize=0,maxSize=10001,1===chosen.large&&(minSize=1e3,maxSize=1e4),1===chosen.medium&&(minSize=400,1e4!==maxSize&&(maxSize=999)),1===chosen.small&&(minSize=0,10001===maxSize&&(maxSize=399)),acreString=1e4===maxSize?minSize+"+":0===minSize&&10001===maxSize?"":minSize+" - "+(maxSize+1),$scope.acreText="Acres: "+acreString),function(item){return minSize<=item.properties.TOTACRES&&item.properties.TOTACRES<=maxSize}};var lastChecked=-1;$scope.uncheck=function(event){event.target.value===lastChecked?(delete $scope.forms.selected,lastChecked=-1):lastChecked=event.target.value},$scope.showChildrens=function(item){console.log("HERE"),item.active=!item.active},$scope.navFunction=function(lat,long){-1!==navigator.platform.indexOf("iPhone")||-1!==navigator.platform.indexOf("iPod")||-1!==navigator.platform.indexOf("iPad")?window.open("maps://maps.google.com/maps/dir/"+$rootScope.currLocation.lat+","+$rootScope.currLocation.lng+"/"+lat+","+long):window.open("http://maps.google.com/maps/dir/"+$rootScope.currLocation.lat+","+$rootScope.currLocation.lng+"/"+lat+","+long)},angular.extend($scope,{tiles:mapboxTile,findUser:function(){$scope.map.locate({setView:!0,maxZoom:13}),$scope.map.on("locationfound",$scope.onLocationFound)},homeView:function(){var alachuaZoom=L.latLng(29.6513,-82.326752);$scope.map.setView(alachuaZoom,10)},onLocationFound:function(e){outerCircle&&$scope.map.removeLayer(radiusCircle),radiusCircle=L.circle(e.latlng,e.accuracy,{stroke:!1,fillColor:"#3473e2",opacity:.2,fillOpacity:.2}).addTo($scope.map),outerCircle&&$scope.map.removeLayer(outerCircle),outerCircle=L.circleMarker(e.latlng,{fillColor:"#3473e2",opacity:.5,weight:1,fillOpacity:.5}).setRadius(10).addTo($scope.map),innerCircle&&$scope.map.removeLayer(innerCircle),innerCircle=L.circleMarker(e.latlng,{fillColor:"#3473e2",color:"white",opacity:1,weight:2,fillOpacity:1}).setRadius(7).addTo($scope.map)},onEachFeature:function(feature,layer){layer.on("click",function(e){openPopup(feature,e.latlng)})},expand:function(feature){$state.go("boundaries.view",{boundaryId:$scope.feature._id,center:$scope.center,boundaryFeature:$scope.feature})}})}]).directive("filtersMenu",function(){return{restrict:"A",replace:!1,link:function(scope,element){scope.isFilterOpen=!1,scope.toggleFilterMenu=function(){scope.isFilterOpen=!scope.isFilterOpen,console.log("here")}}}}),angular.module("core").directive("filtersMenu",["$stateParams",function($stateParams){return{restrict:"A",replace:!1,link:function(scope,element){scope.isFilterOpen=!1,scope.toggleFilterMenu=function(){scope.isFilterOpen=!scope.isFilterOpen}}}}]),angular.module("core").directive("offCanvasMenu",["$stateParams",function($stateParams){$stateParams.boundaryFeature;return{restrict:"A",replace:!1,link:function(scope,element){scope.isMenuOpen=!1,scope.toggleMenu=function(){scope.isMenuOpen=!scope.isMenuOpen}}}}]),angular.module("core").directive("showErrors",["$timeout","$interpolate",function($timeout,$interpolate){var linkFn=function(scope,el,attrs,formCtrl){var inputEl,inputName,inputNgEl,options,showSuccess,toggleClasses,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=$interpolate(inputNgEl.attr("name")||"")(scope),!inputName)throw"show-errors element has no child input elements with a 'name' attribute class";var reset=function(){return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)};scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},function(invalid){return toggleClasses(invalid)}),scope.$on("show-errors-check-validity",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?(initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)):void 0}),scope.$on("show-errors-reset",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?reset():void 0}),toggleClasses=function(invalid){return el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess?el.toggleClass("has-success",showValidationMessages&&!invalid):void 0}};return{restrict:"A",require:"^form",compile:function(elem,attrs){if(-1===attrs.showErrors.indexOf("skipFormGroupCheck")&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw"show-errors element does not have the 'form-group' or 'input-group' class";return linkFn}}}]),angular.module("core").factory("authInterceptor",["$q","$injector",function($q,$injector){return{responseError:function(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 401:$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden")}return $q.reject(rejection)}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user","admin"],this.menus={};var shouldRender=function(user){if(~this.roles.indexOf("*"))return!0;if(!user)return!1;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],roles:null===options.roles||"undefined"==typeof options.roles?this.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.state,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===menuItemState&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{roles:["*"]})}]),angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){this.connect=function(){Authentication.user&&(this.socket=io())},this.connect(),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]),angular.module("trails").config(["$stateProvider",function($stateProvider){$stateProvider.state("trails",{"abstract":!0,url:"/trails",template:"<ui-view/>"}).state("trails.list",{url:"",templateUrl:"modules/trails/client/views/list-trails.client.view.html"}).state("trails.create",{url:"/create",templateUrl:"modules/trails/client/views/create-trail.client.view.html",data:{roles:["user","admin"]}}).state("trails.view",{url:"/:trailId",templateUrl:"modules/trails/client/views/view-trail.client.view.html"}).state("trails.edit",{url:"/edit/:trailId",templateUrl:"modules/trails/client/views/edit-trail.client.view.html",data:{roles:["user","admin"]}})}]),angular.module("trails").controller("TrailsController",["$scope","$stateParams","$rootScope","$location","Authentication","Trails","$state","leafletData",function($scope,$stateParams,$rootScope,$location,Authentication,Trails,$state,leafletData){$scope.authentication=Authentication,$scope.loading=!0,$scope.create=function(content){$scope.error=null;var trail=new Trails(JSON.parse(content));console.log(trail),trail.$save(function(response){$scope.success=!0,$scope.statusMessage="Added"},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(trail){confirm("Are you sure you want to delete this user?")&&Trails["delete"]({trailId:$stateParams.trailId}).$promise.then(function(res){$scope.success=!0,$scope.statusMessage="Deleted"},function(error){$scope.error="Unable to remove trail!\n"+error})},$scope.update=function(isValid){if($scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","trailForm"),!1;var trail=$scope.trail;trail.$update(function(){$scope.success=!0,$scope.statusMessage="Updated"},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){Trails.query().$promise.then(function(res){$scope.trails=res,$scope.loading=!1,console.log("EXECUTED FIND")})},$scope.findOne=function(){angular.extend($scope,{edit:{lat:29.671316,lng:-82.327766,zoom:10}}),Trails.get({trailId:$stateParams.trailId}).$promise.then(function(res){$scope.trail=res,console.log($scope.trail);var previewData=$scope.trail,poly=L.geoJson($scope.trail),center=poly.getBounds().getCenter();console.log(center),angular.extend($scope,{edit:{lat:center.lat,lng:center.lng,zoom:14},geojson:{data:previewData,style:{color:"red"}}}),$scope.loading=!1})},$scope.showContent=function($fileContent){$scope.content=$fileContent;var previewData=JSON.parse($scope.content);angular.extend($scope,{center:{lat:29.671316,lng:-82.327766,zoom:10},geojson:{data:previewData,style:{color:"red"}}})}}]),angular.module("boundaries").directive("offCanvasMenu",["$stateParams",function($stateParams){$stateParams.boundaryFeature;return{restrict:"A",replace:!1,link:function(scope,element){scope.isMenuOpen=!1,scope.toggleMenu=function(){scope.isMenuOpen=!scope.isMenuOpen}}}}]),angular.module("boundaries").directive("onReadFile",["$parse",function($parse){return{restrict:"A",scope:!1,link:function(scope,element,attrs){var fn=$parse(attrs.onReadFile);element.on("change",function(onChangeEvent){var reader=new FileReader;reader.onload=function(onLoadEvent){scope.$apply(function(){fn(scope,{$fileContent:onLoadEvent.target.result})})},reader.readAsText((onChangeEvent.srcElement||onChangeEvent.target).files[0])})}}}]),angular.module("trails").factory("Trails",["$resource",function($resource){return $resource("api/trails/:trailId",{trailId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin.users",{url:"/users",templateUrl:"modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController"}).state("admin.user",{url:"/users/:userId",templateUrl:"modules/users/client/views/admin/view-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}}).state("admin.user-edit",{url:"/users/:userId/edit",templateUrl:"modules/users/client/views/admin/edit-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/client/views/settings/settings.client.view.html",data:{roles:["user","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/client/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/client/views/settings/change-password.client.view.html"
}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/client/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/client/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin?err",templateUrl:"modules/users/client/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/client/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/client/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/client/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/client/views/password/reset-password.client.view.html"})}]),angular.module("users.admin").controller("UserListController",["$scope","$filter","Admin",function($scope,$filter,Admin){Admin.query(function(data){$scope.users=data,$scope.buildPager()}),$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=15,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")($scope.users,{$:$scope.search}),$scope.filterLength=$scope.filteredItems.length;var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.pagedItems=$scope.filteredItems.slice(begin,end)},$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()}}]),angular.module("users.admin").controller("UserController",["$scope","$state","Authentication","userResolve",function($scope,$state,Authentication,userResolve){$scope.authentication=Authentication,$scope.user=userResolve,$scope.remove=function(user){confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),$scope.users.splice($scope.users.indexOf(user),1)):$scope.user.$remove(function(){$state.go("admin.users")}))},$scope.update=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=$scope.user;user.$update(function(){$state.go("admin.user",{userId:user._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("users").controller("AuthenticationController",["$scope","$state","$http","$location","$window","Authentication","PasswordValidator",function($scope,$state,$http,$location,$window,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.error=$location.search().err,$scope.authentication.user&&$location.path("/"),$scope.signup=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.signin=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.callOauthProvider=function(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),$window.location.href=url}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication","PasswordValidator",function($scope,$stateParams,$http,$location,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","forgotPasswordForm"),!1)},$scope.resetUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","resetPasswordForm"),!1)}}]),angular.module("users").controller("ChangePasswordController",["$scope","$http","Authentication","PasswordValidator",function($scope,$http,Authentication,PasswordValidator){$scope.user=Authentication.user,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.changeUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/users/password",$scope.passwordDetails).success(function(response){$scope.$broadcast("show-errors-reset","passwordForm"),$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","passwordForm"),!1)}}]),angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if($scope.success=$scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=new Users($scope.user);user.$update(function(response){$scope.$broadcast("show-errors-reset","userForm"),$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}}]),angular.module("users").controller("SettingsController",["$scope","Authentication",function($scope,Authentication){$scope.user=Authentication.user}]),angular.module("users").directive("passwordValidator",["PasswordValidator",function(PasswordValidator){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$validators.requirements=function(password){var status=!0;if(password){var result=PasswordValidator.getResult(password),requirementsIdx=0,requirementsMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];result.errors.length<requirementsMeter.length&&(requirementsIdx=requirementsMeter.length-result.errors.length-1),scope.requirementsColor=requirementsMeter[requirementsIdx].color,scope.requirementsProgress=requirementsMeter[requirementsIdx].progress,result.errors.length?(scope.popoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,status=!1):(scope.popoverMsg="",scope.passwordErrors=[],status=!0)}return status}}}}]),angular.module("users").directive("passwordVerify",[function(){return{require:"ngModel",scope:{passwordVerify:"="},link:function(scope,element,attrs,ngModel){scope.$watch(function(){var combined;return(scope.passwordVerify||ngModel)&&(combined=scope.passwordVerify+"_"+ngModel),combined},function(value){value&&(ngModel.$validators.passwordVerify=function(password){var origin=scope.passwordVerify;return origin!==password?!1:!0})})}}}]),angular.module("users").directive("lowercase",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}}}),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("PasswordValidator",["$window",function($window){var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest;return{getResult:function(password){var result=owaspPasswordStrengthTest.test(password);return result},getPopoverMsg:function(){var popoverMsg="Please enter a passphrase or password with greater than 10 characters, numbers, lowercase, upppercase, and special characters.";return popoverMsg}}}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]),angular.module("users.admin").factory("Admin",["$resource",function($resource){return $resource("api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]);